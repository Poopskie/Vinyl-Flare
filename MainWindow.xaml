<Window x:Class="Vinyl_Flare.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Vinyl_Flare"
        xmlns:stores="clr-namespace:Vinyl_Flare.MVVM.Store"
        xmlns:viewModel="clr-namespace:Vinyl_Flare.MVVM.ViewModel" 
        d:DataContext="{d:DesignInstance Type=viewModel:MainViewModel}"
        mc:Ignorable="d"
        Title="MainWindow" Height="1080" Width="1920"
        x:Name="window"
        ResizeMode="NoResize" WindowState="Maximized"
        Background="Transparent"
        WindowStyle="ThreeDBorderWindow" Icon="/Images/milimnava.jpg"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors">
    <!--AllowsTransparency="True"-->



    <Border Background="LightGray" CornerRadius="20">


        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="8.2*"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="4*"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>

            <ContentControl Margin="10" Grid.RowSpan="2" Grid.ColumnSpan ="2" 
                            Content="{Binding CurrentViewModel}"
                            >

            </ContentControl>


            <!-- Button to hide/unhide buttons -->

            <StackPanel Margin="0,0,0,0" HorizontalAlignment="Stretch"
                        >


                <Button Margin="10 10 10 -150" Height="100" BorderThickness="0"
                            Visibility="{Binding Milim}" Background="Transparent"
                            IsHitTestVisible="True" Name="milimbutton" Focusable="False"
                            >

                    <Image Source="Images/milimnava.jpg" HorizontalAlignment="Center" 
                               Visibility="{Binding Milim, NotifyOnTargetUpdated=True}"
                               x:Name="milim"
                               TargetUpdated="OnTargetUpdated" Height="150"/>

                    <Button.Triggers>

                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation 
                                                Storyboard.TargetProperty="Opacity"
                                                Storyboard.TargetName="milimbutton"
                                                To="1.0" Duration="0:0:2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation 
                                                Storyboard.TargetProperty="Opacity"
                                                Storyboard.TargetName="milimbutton"
                                                To="0.0" Duration="0:0:1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                    </Button.Triggers>

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding LeavePlaySongView}"/>
                            <i:InvokeCommandAction Command="{Binding NavigateHomeCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                      
                    


                    </Button>
                    
                    
                    


                <!-- The button that hides the other menu options -->
                <ToggleButton HorizontalAlignment="Center" Checked="HideMenus_Checked"
                         VerticalAlignment="Top"
                        x:Name="HideMenus" Unchecked="HideMenus_Unchecked">
                    <Image Source="Images/rikakawai.jpg" HorizontalAlignment="Center"
                           Margin="-1"/>
                    <ToggleButton.Style>
                        <!-- Make button bigger while hovering -->
                        <Style TargetType="{x:Type ToggleButton}">
                            <Style.Setters>
                                <Setter Property="Margin" Value="10"/>
                                <Setter Property="BorderBrush" Value="#FFE6FF"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">

                                            <Border VerticalAlignment="Stretch" 
                                                    HorizontalAlignment="Stretch"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}">
                                                <ContentPresenter VerticalAlignment="Stretch"
                                                                  HorizontalAlignment="Stretch"/>
                                            </Border>

                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style.Setters>
                            <Style.Triggers>
                                <!-- Changes when clicked and mouse over -->
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Margin" Value="7"/>
                                    <Setter Property="BorderThickness" Value="5"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="BorderBrush" Value="#AFEEEE"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="BorderBrush" Value="#FFE6FF"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>

                </ToggleButton>


                <StackPanel HorizontalAlignment="Stretch" x:Name="SideMenu"
                            >

                    <!-- Menus buttons -->
                    <RadioButton Content="Home" Height="75"
                                 FontSize="24" FontFamily="Comic Sans MS"
                                 Style="{StaticResource MenuButtonTheme}"
                                 IsChecked="True" Command="{Binding NavigateHomeCommand}"/>

                    <RadioButton Content="Library" Height="75"
                                 FontSize="24" FontFamily="Comic Sans MS"
                                 Style="{StaticResource MenuButtonTheme}"
                                 Command="{Binding NavigateLibraryCommand}"/>


                    <RadioButton Content="Factory" Height="75"
                                 FontSize="24" FontFamily="Comic Sans MS"
                                 Style="{StaticResource MenuButtonTheme}"
                                 Command="{Binding NavigateFactoryCommand}"/>


                </StackPanel>




            </StackPanel>

            <!-- Fullscreen button -->

            <ToggleButton Grid.Column="1" HorizontalAlignment="Right" x:Name="btnFullScreen"
                        VerticalAlignment="Top" Height="82" Width="92" Margin="0,20,20,0"
                     Checked="btnFullScreen_Checked" Unchecked="btnFullScreen_Unchecked">

                <Image Grid.Column="1" Source="/Images/fullscreen.png" 
                        HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                        Margin="-15"/>

                <ToggleButton.Style>
                    <!-- overiding default toggle button -->
                    <Style TargetType="{x:Type ToggleButton}">

                        <Style.Setters>
                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                            <Setter Property="Background" Value="White"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">

                                        <Border HorizontalAlignment="Stretch" 
                                                VerticalAlignment="Stretch"
                                                Background="{TemplateBinding Background}">
                                            <Grid>
                                                <!-- Displaying content -->
                                                <ContentPresenter HorizontalAlignment="Stretch"
                                                    VerticalAlignment="Stretch"/>
                                            </Grid>
                                        </Border>


                                    </ControlTemplate>

                                </Setter.Value>
                            </Setter>


                        </Style.Setters>

                        <Style.Triggers>
                            <!-- changing border and such -->
                            <Trigger Property="IsChecked" Value="True">
                                <!-- Eventually add a change of the content here -->
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FFE6FF"/>
                            </Trigger>
                        </Style.Triggers>

                    </Style>
                </ToggleButton.Style>

            </ToggleButton>



        </Grid>




    </Border>

</Window>
